{"version":3,"sources":["Components/Payments.js","Components/Landing.js"],"names":["connect","dispatch","handleToken","token","authActions","injectStripe","props","react_default","a","createElement","index_es","component","onSubmit","e","preventDefault","stripe","createToken","name","then","_ref","title","es","style","textAlign","padding","margin","type","Landing","_useState","useState","_useState2","Object","slicedToArray","setStripe","useEffect","window","Stripe","process","document","querySelector","addEventListener","variant","container","spacing","item","xs","Components_Payments"],"mappings":"gKAsCeA,cAAQ,KAJI,SAACC,GAAD,MAAe,CACxCC,YAAa,SAACC,GAAD,OAAWF,EAASG,IAAYF,YAAYC,OAG5CH,CAAkCK,uBAhChC,SAACC,GAWhB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAW,OAAQC,SAVL,SAACC,GACrBA,EAAEC,iBAEFR,EAAMS,OAAOC,YAAY,CAACC,KAAM,gBAAgBC,KAAK,SAAAC,GAAa,IAAXhB,EAAWgB,EAAXhB,MACrDG,EAAMJ,YAAYC,OAOlBI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,MAAO,iBAETb,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACY,EAAA,YAAD,OAEFd,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaY,MAAO,CAACC,UAAW,SAAUC,QAAS,SACjDjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAO,CAACG,OAAQ,QAASC,KAAM,UAAvC,eCQOC,UA/BC,WAAM,IAAAC,EAEUC,mBAAS,MAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEXb,EAFWe,EAAA,GAEHG,EAFGH,EAAA,GAclB,OAVAI,oBAAU,WACFC,OAAOC,OACPH,EAAUE,OAAOC,OAAOC,qCAExBC,SAASC,cAAc,cAAcC,iBAAiB,OAAQ,WAC1DP,EAAUE,OAAOC,OAAOC,wCAGjC,IAEI9B,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACC,UAAW,SAAUC,QAAS,cAC9CjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY+B,QAAS,MAArB,WACAlC,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgC,WAAS,EAACC,QAAS,GAAIrB,MAAO,CAACG,OAAQ,WACzClB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,IACftC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GACXtC,EAAAC,EAAAC,cAACY,EAAA,eAAD,CAAgBN,OAAQA,GACpBR,EAAAC,EAAAC,cAACY,EAAA,SAAD,KACId,EAAAC,EAAAC,cAACqC,EAAD,SAIZvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI","file":"static/js/6.b36ddd22.chunk.js","sourcesContent":["import React from 'react';\nimport {CardElement, injectStripe} from \"react-stripe-elements\";\nimport {Button, Card, CardActions, CardContent, CardHeader, Divider} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {authActions} from '../Actions/authActions';\n\nconst Payments = (props) => {\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    props.stripe.createToken({name: 'Jenny Rosen'}).then(({token}) => {\n      props.handleToken(token);\n    });\n\n  };\n\n  return (\n    <Card component={'form'} onSubmit={submitHandler}>\n      <CardHeader\n        title={'Pay us money'}\n      />\n      <Divider/>\n      <CardContent>\n        <CardElement/>\n      </CardContent>\n      <Divider/>\n      <CardActions style={{textAlign: 'center', padding: '10px'}}>\n        <Button style={{margin: 'auto'}} type={'submit'}>Submit</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleToken: (token) => dispatch(authActions.handleToken(token))\n});\n\nexport default connect(null, mapDispatchToProps)(injectStripe(Payments));","import React, {useEffect, useState} from \"react\";\nimport {Typography, Grid} from \"@material-ui/core\";\nimport Payments from './Payments'\nimport {Elements, StripeProvider} from \"react-stripe-elements\";\n\nconst Landing = () => {\n\n    const [stripe, setStripe] = useState(null);\n\n    useEffect(() => {\n        if (window.Stripe) {\n            setStripe(window.Stripe(process.env.REACT_APP_STRIPE_KEY));\n        } else {\n            document.querySelector('#stripe-js').addEventListener('load', () => {\n                setStripe(window.Stripe(process.env.REACT_APP_STRIPE_KEY));\n            });\n        }\n    }, []);\n\n    return <div style={{textAlign: 'center', padding: '50px 20px'}}>\n        <Typography variant={'h1'}>Emaily!</Typography>\n        <p>Collect feedback from your users</p>\n        <Grid container spacing={16} style={{margin: '40px 0'}}>\n            <Grid item xs={4}/>\n            <Grid item xs={4}>\n                <StripeProvider stripe={stripe}>\n                    <Elements>\n                        <Payments/>\n                    </Elements>\n                </StripeProvider>\n            </Grid>\n            <Grid item xs={4}/>\n        </Grid>\n    </div>\n};\n\nexport default Landing;"],"sourceRoot":""}